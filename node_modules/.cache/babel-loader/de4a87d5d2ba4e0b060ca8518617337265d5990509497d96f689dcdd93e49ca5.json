{"ast":null,"code":"import _classCallCheck from\"/Users/li4nost/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/li4nost/dev/mesto-react/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._headers=headers;}_createClass(Api,[{key:\"getUserData\",value:function getUserData(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"changeUserInfo\",value:function changeUserInfo(name,about){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:\"\".concat(name),about:\"\".concat(about)})}).then(this._checkResponse);}},{key:\"addNewCard\",value:function addNewCard(name,link){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:\"\".concat(name),link:\"\".concat(link)})}).then(this._checkResponse);}},{key:\"getLikeInfo\",value:function getLikeInfo(){return fetch(\"\".concat(this._baseUrl,\"cohort-54/cards\"),{method:'GET',headers:this._headers}).then(this._checkResponse);}},{key:\"deleteMyCard\",value:function deleteMyCard(id){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id),{method:'DELETE',headers:{authorization:'33d68f8a-3b24-4840-804d-6b0ee1010dc9'}}).then(this._checkResponse);}},{key:\"setLikeCard\",value:function setLikeCard(id,like){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(id,\"/likes\"),{method:!like?'DELETE':'PUT',headers:this._headers}).then(this._checkResponse);}// delteLikeCard(id) {\n//   return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n//     method: 'DELETE',\n//     headers: this._headers\n//   })\n//     .then(this._checkResponse);\n// }\n},{key:\"changeUserAvatar\",value:function changeUserAvatar(link){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:\"\".concat(link)})}).then(this._checkResponse);}},{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}else{return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430:\".concat(res.status,\" \").concat(res.statusText));}}}]);return Api;}();export{Api as default};var api=new Api({baseUrl:'https://mesto.nomoreparties.co/v1/cohort-54',headers:{authorization:'33d68f8a-3b24-4840-804d-6b0ee1010dc9','Content-Type':'application/json'}});export{api};","map":{"version":3,"names":["Api","baseUrl","headers","_baseUrl","_headers","fetch","method","then","_checkResponse","name","about","body","JSON","stringify","link","id","authorization","like","avatar","res","ok","json","Promise","reject","status","statusText","api"],"sources":["/Users/li4nost/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export default class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl\n    this._headers = headers\n  }\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }\n    )\n      .then(this._checkResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n  changeUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        about: `${about}`\n      })\n    })\n    .then(this._checkResponse)\n      \n  }\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: \n       this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        link: `${link}`\n      })\n    }\n    )\n      .then(this._checkResponse)\n  }\n\n  getLikeInfo() {\n    return fetch(`${this._baseUrl}cohort-54/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n  deleteMyCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: '33d68f8a-3b24-4840-804d-6b0ee1010dc9'\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  setLikeCard(id, like) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: !like ? 'DELETE' : 'PUT',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  // delteLikeCard(id) {\n  //   return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n  //     method: 'DELETE',\n  //     headers: this._headers\n  //   })\n  //     .then(this._checkResponse);\n  // }\n  changeUserAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${link}`\n      })\n    })\n      .then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка:${res.status} ${res.statusText}`);\n    }\n  }\n\n}\n\n const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-54',\n  headers: {\n      authorization: '33d68f8a-3b24-4840-804d-6b0ee1010dc9',\n      'Content-Type': 'application/json'\n  }\n})\n\nexport {api}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}