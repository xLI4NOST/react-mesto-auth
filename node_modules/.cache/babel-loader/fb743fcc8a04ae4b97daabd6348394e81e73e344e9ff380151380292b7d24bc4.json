{"ast":null,"code":"export default class AuthApi {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  postUser(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        \"password\": `${password}`,\n        \"email\": `${email}`\n      })\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n    });\n  }\n  autorizeUser(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        \"password\": `${password}`,\n        \"email\": `${email}`\n      })\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      console.log(res);\n      localStorage.setItem('token', res.token);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  checkTokenUser(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'get',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${localStorage.getItem('token')}`\n      }\n    }).then(res => {\n      return res.json();\n    }).then(res => {\n      let token;\n    });\n  }\n}\nconst authApi = new AuthApi({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport { authApi };","map":{"version":3,"names":["AuthApi","constructor","baseUrl","headers","_baseUrl","_headers","postUser","email","password","fetch","method","body","JSON","stringify","then","res","json","console","log","autorizeUser","localStorage","setItem","token","catch","err","checkTokenUser","getItem","authApi"],"sources":["/Users/li4nost/dev/mesto-react/src/utils/AuthApi.js"],"sourcesContent":["export default class AuthApi {\n    constructor({baseUrl, headers}) {\n      this._baseUrl = baseUrl\n      this._headers = headers\n    }\n    postUser(email, password) {\n        return fetch(`${this._baseUrl}/signup`, {\n          method: 'POST',\n          headers: this._headers,\n          body: JSON.stringify({\n            \"password\": `${password}`,\n            \"email\": `${email}` \n          })\n        }\n        )\n          .then((res)=>{\n            return res.json()\n          })\n          .then((res)=>{\n          console.log(res);\n          })\n      }\n\n      autorizeUser(email, password) {\n        return fetch(`${this._baseUrl}/signin`, {\n          method: 'POST',\n          headers: this._headers,\n          body: JSON.stringify({\n            \"password\": `${password}`,\n            \"email\": `${email}` \n          })\n        }\n        )\n          .then((res)=>{\n            return res.json()\n          })\n          .then((res)=>{\n            console.log(res);\n            localStorage.setItem('token', res.token);\n          })\n          .catch((err)=>{\n            console.log(err);\n          })\n      }\n\n      checkTokenUser(token) {\n        return fetch(`${this._baseUrl}/users/me`, {\n          method: 'get',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${localStorage.getItem('token')}`\n          },\n        }\n        )\n          .then((res)=>{\n            return res.json()\n          })\n          .then((res)=>{\nlet token\n          })\n      }\n\n      \n}\n\n\n\nconst authApi = new AuthApi({\n    baseUrl: 'https://auth.nomoreparties.co',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n  })\n  export {authApi}"],"mappings":"AAAA,eAAe,MAAMA,OAAO,CAAC;EACzBC,WAAW,OAAqB;IAAA,IAApB;MAACC,OAAO;MAAEC;IAAO,CAAC;IAC5B,IAAI,CAACC,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACzB;EACAG,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACtB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACL,QAAS,SAAQ,EAAE;MACtCM,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,UAAU,EAAG,GAAEL,QAAS,EAAC;QACzB,OAAO,EAAG,GAAED,KAAM;MACpB,CAAC;IACH,CAAC,CACA,CACEO,IAAI,CAAEC,GAAG,IAAG;MACX,OAAOA,GAAG,CAACC,IAAI,EAAE;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEC,GAAG,IAAG;MACbE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;IAChB,CAAC,CAAC;EACN;EAEAI,YAAY,CAACZ,KAAK,EAAEC,QAAQ,EAAE;IAC5B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACL,QAAS,SAAQ,EAAE;MACtCM,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,UAAU,EAAG,GAAEL,QAAS,EAAC;QACzB,OAAO,EAAG,GAAED,KAAM;MACpB,CAAC;IACH,CAAC,CACA,CACEO,IAAI,CAAEC,GAAG,IAAG;MACX,OAAOA,GAAG,CAACC,IAAI,EAAE;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEC,GAAG,IAAG;MACXE,OAAO,CAACC,GAAG,CAACH,GAAG,CAAC;MAChBK,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEN,GAAG,CAACO,KAAK,CAAC;IAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAG;MACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;IAClB,CAAC,CAAC;EACN;EAEAC,cAAc,CAACH,KAAK,EAAE;IACpB,OAAOb,KAAK,CAAE,GAAE,IAAI,CAACL,QAAS,WAAU,EAAE;MACxCM,MAAM,EAAE,KAAK;MACbP,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAI,UAASiB,YAAY,CAACM,OAAO,CAAC,OAAO,CAAE;MAC5D;IACF,CAAC,CACA,CACEZ,IAAI,CAAEC,GAAG,IAAG;MACX,OAAOA,GAAG,CAACC,IAAI,EAAE;IACnB,CAAC,CAAC,CACDF,IAAI,CAAEC,GAAG,IAAG;MACvB,IAAIO,KAAK;IACC,CAAC,CAAC;EACN;AAGN;AAIA,MAAMK,OAAO,GAAG,IAAI3B,OAAO,CAAC;EACxBE,OAAO,EAAE,+BAA+B;EACxCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACF,CAAC,CAAC;AACF,SAAQwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}