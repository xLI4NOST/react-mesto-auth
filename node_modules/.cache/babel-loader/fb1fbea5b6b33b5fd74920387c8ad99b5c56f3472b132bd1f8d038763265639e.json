{"ast":null,"code":"var _jsxFileName = \"/Users/li4nost/dev/mesto-react/src/components/landing/popupWithForm.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PopupWithForm(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `popup popup_type_${props.name} ${props.isOpen ? '' : ' animation-close'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menu__close-icon close-icon\",\n        type: \"button\",\n        onClick: props.closeAll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"menu__title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        noValidate: \"\",\n        name: `${props.name}`,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this);\n}\n_c = PopupWithForm;\nexport default PopupWithForm;\n\n// function closeAllPopups() {\n//     const allPopup = document.querySelectorAll('.popup')\n//     allPopup.forEach((elem) => {\n//       elem.classList.add('animation-close')\n//       setTimeout(() => elem.classList.remove('popup_active')\n//         , 500);\n//         setTimeout(() => elem.classList.remove('animation-close')\n//         , 500); \n//     })\n//   }\nvar _c;\n$RefreshReg$(_c, \"PopupWithForm\");","map":{"version":3,"names":["React","useEffect","useState","PopupWithForm","props","console","log","name","isOpen","closeAll","title","children"],"sources":["/Users/li4nost/dev/mesto-react/src/components/landing/popupWithForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nfunction PopupWithForm(props) {\n    console.log(props);\n\n    return (\n            <div className={`popup popup_type_${props.name} ${props.isOpen ? '' : ' animation-close'}`}  >\n                <div className=\"menu\">\n                    <button className=\"menu__close-icon close-icon\" type=\"button\"  onClick={props.closeAll}/>\n                    <h2 className=\"menu__title\">{props.title}</h2>\n                    <form className=\"form\" noValidate=\"\" name={`${props.name}`}>\n                        {props.children}\n                    </form>\n                </div>\n            </div>\n    )\n}\n \nexport default PopupWithForm\n\n// function closeAllPopups() {\n//     const allPopup = document.querySelectorAll('.popup')\n//     allPopup.forEach((elem) => {\n//       elem.classList.add('animation-close')\n//       setTimeout(() => elem.classList.remove('popup_active')\n//         , 500);\n//         setTimeout(() => elem.classList.remove('animation-close')\n//         , 500); \n//     })\n//   }"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC;AACnD,SAASC,aAAa,CAACC,KAAK,EAAE;EAC1BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAElB,oBACQ;IAAK,SAAS,EAAG,oBAAmBA,KAAK,CAACG,IAAK,IAAGH,KAAK,CAACI,MAAM,GAAG,EAAE,GAAG,kBAAmB,EAAE;IAAA,uBACvF;MAAK,SAAS,EAAC,MAAM;MAAA,wBACjB;QAAQ,SAAS,EAAC,6BAA6B;QAAC,IAAI,EAAC,QAAQ;QAAE,OAAO,EAAEJ,KAAK,CAACK;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eACzF;QAAI,SAAS,EAAC,aAAa;QAAA,UAAEL,KAAK,CAACM;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9C;QAAM,SAAS,EAAC,MAAM;QAAC,UAAU,EAAC,EAAE;QAAC,IAAI,EAAG,GAAEN,KAAK,CAACG,IAAK,EAAE;QAAA,UACtDH,KAAK,CAACO;MAAQ;QAAA;QAAA;QAAA;MAAA,QACZ;IAAA;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACJ;AAElB;AAAC,KAdQR,aAAa;AAgBtB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}