{"ast":null,"code":"export default class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        about: `${about}`\n      })\n    }).then(this._checkResponse);\n  }\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        link: `${link}`\n      })\n    }).then(this._checkResponse);\n  }\n  getLikeInfo() {\n    return fetch(`${this._baseUrl}cohort-54/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  deleteMyCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: '33d68f8a-3b24-4840-804d-6b0ee1010dc9'\n      }\n    }).then(this._checkResponse);\n  }\n  setLikeCard(id, like) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: `${like ? 'PUT' : 'DELETE'}`,\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  delteLikeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  changeUserAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${link}`\n      })\n    }).then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка:${res.status} ${res.statusText}`);\n    }\n  }\n}\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-54',\n  headers: {\n    authorization: '33d68f8a-3b24-4840-804d-6b0ee1010dc9',\n    'Content-Type': 'application/json'\n  }\n});\nexport { api };","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","getUserData","fetch","method","then","_checkResponse","getInitialCards","changeUserInfo","name","about","body","JSON","stringify","addNewCard","link","getLikeInfo","deleteMyCard","id","authorization","setLikeCard","like","delteLikeCard","changeUserAvatar","avatar","res","ok","json","Promise","reject","status","statusText","api"],"sources":["/Users/li4nost/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["export default class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl\n    this._headers = headers\n  }\n  getUserData() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }\n    )\n      .then(this._checkResponse)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n  changeUserInfo(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        about: `${about}`\n      })\n    })\n    .then(this._checkResponse)\n      \n  }\n  addNewCard(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: \n       this._headers,\n      body: JSON.stringify({\n        name: `${name}`,\n        link: `${link}`\n      })\n    }\n    )\n      .then(this._checkResponse)\n  }\n\n  getLikeInfo() {\n    return fetch(`${this._baseUrl}cohort-54/cards`, {\n      method: 'GET',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n  deleteMyCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: '33d68f8a-3b24-4840-804d-6b0ee1010dc9'\n      }\n    })\n      .then(this._checkResponse);\n  }\n\n  setLikeCard(id, like) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: `${like ? 'PUT' : 'DELETE'}`,\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  delteLikeCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n  changeUserAvatar(link) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: `${link}`\n      })\n    })\n      .then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка:${res.status} ${res.statusText}`);\n    }\n  }\n\n}\n\n const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-54',\n  headers: {\n      authorization: '33d68f8a-3b24-4840-804d-6b0ee1010dc9',\n      'Content-Type': 'application/json'\n  }\n})\n\nexport {api}\n\n"],"mappings":"AAAA,eAAe,MAAMA,GAAG,CAAC;EACvBC,WAAW,OAAqB;IAAA,IAApB;MAACC,OAAO;MAAEC;IAAO,CAAC;IAC5B,IAAI,CAACC,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACzB;EACAG,WAAW,GAAG;IACZ,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,WAAU,EAAE;MACxCI,MAAM,EAAE,KAAK;MACbL,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CACA,CACEI,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EAEAC,eAAe,GAAG;IAChB,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,QAAO,EAAE;MACrCI,MAAM,EAAE,KAAK;MACbL,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CACCI,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EACAE,cAAc,CAACC,IAAI,EAAEC,KAAK,EAAE;IAC1B,OAAOP,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,WAAU,EAAE;MACxCI,MAAM,EAAE,OAAO;MACfL,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBJ,IAAI,EAAG,GAAEA,IAAK,EAAC;QACfC,KAAK,EAAG,GAAEA,KAAM;MAClB,CAAC;IACH,CAAC,CAAC,CACDL,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAE5B;EACAQ,UAAU,CAACL,IAAI,EAAEM,IAAI,EAAE;IACrB,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,QAAO,EAAE;MACrCI,MAAM,EAAE,MAAM;MACdL,OAAO,EACN,IAAI,CAACE,QAAQ;MACdU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBJ,IAAI,EAAG,GAAEA,IAAK,EAAC;QACfM,IAAI,EAAG,GAAEA,IAAK;MAChB,CAAC;IACH,CAAC,CACA,CACEV,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EAEAU,WAAW,GAAG;IACZ,OAAOb,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,iBAAgB,EAAE;MAC9CI,MAAM,EAAE,KAAK;MACbL,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CACCI,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EACAW,YAAY,CAACC,EAAE,EAAE;IACf,OAAOf,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,UAASkB,EAAG,EAAC,EAAE;MAC3Cd,MAAM,EAAE,QAAQ;MAChBL,OAAO,EAAE;QACPoB,aAAa,EAAE;MACjB;IACF,CAAC,CAAC,CACCd,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EAEAc,WAAW,CAACF,EAAE,EAAEG,IAAI,EAAE;IACpB,OAAOlB,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,UAASkB,EAAG,QAAO,EAAE;MACjDd,MAAM,EAAG,GAAEiB,IAAI,GAAG,KAAK,GAAG,QAAS,EAAC;MACpCtB,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CACCI,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EAEAgB,aAAa,CAACJ,EAAE,EAAE;IAChB,OAAOf,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,UAASkB,EAAG,QAAO,EAAE;MACjDd,MAAM,EAAE,QAAQ;MAChBL,OAAO,EAAE,IAAI,CAACE;IAChB,CAAC,CAAC,CACCI,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EACAiB,gBAAgB,CAACR,IAAI,EAAE;IACrB,OAAOZ,KAAK,CAAE,GAAE,IAAI,CAACH,QAAS,kBAAiB,EAAE;MAC/CI,MAAM,EAAE,OAAO;MACfL,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBU,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBW,MAAM,EAAG,GAAET,IAAK;MAClB,CAAC;IACH,CAAC,CAAC,CACCV,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EACAA,cAAc,CAACmB,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;IACjE;EACF;AAEF;AAEC,MAAMC,GAAG,GAAG,IAAIpC,GAAG,CAAC;EACnBE,OAAO,EAAE,6CAA6C;EACtDC,OAAO,EAAE;IACLoB,aAAa,EAAE,sCAAsC;IACrD,cAAc,EAAE;EACpB;AACF,CAAC,CAAC;AAEF,SAAQa,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}