{"ast":null,"code":"export default class AuthApi {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n  postUser(email, password) {\n    return fetch(`${this._baseUrl}/signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        \"password\": `${password}`,\n        \"email\": `${email}`\n      })\n    }).then(this._checkResponse);\n  }\n  autorizeUser(email, password) {\n    return fetch(`${this._baseUrl}/signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        \"password\": `${password}`,\n        \"email\": `${email}`\n      })\n    }).then(this._checkResponse).catch(err => {\n      console.log(err);\n    });\n  }\n  checkTokenUser(token) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка:${res.status} ${res.statusText}`);\n    }\n  }\n}\nconst authApi = new AuthApi({\n  baseUrl: 'https://auth.nomoreparties.co',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport { authApi };","map":{"version":3,"names":["AuthApi","constructor","baseUrl","headers","_baseUrl","_headers","postUser","email","password","fetch","method","body","JSON","stringify","then","_checkResponse","autorizeUser","catch","err","console","log","checkTokenUser","token","res","ok","json","Promise","reject","status","statusText","authApi"],"sources":["/Users/li4nost/dev/react-mesto-auth/src/utils/AuthApi.js"],"sourcesContent":["export default class AuthApi {\n    constructor({baseUrl, headers}) {\n      this._baseUrl = baseUrl\n      this._headers = headers\n    }\n    postUser(email, password) {\n        return fetch(`${this._baseUrl}/signup`, {\n          method: 'POST',\n          headers: this._headers,\n          body: JSON.stringify({\n            \"password\": `${password}`,\n            \"email\": `${email}` \n          })\n        }\n        )\n        .then(this._checkResponse);\n      }\n\n      autorizeUser(email, password) {\n        return fetch(`${this._baseUrl}/signin`, {\n          method: 'POST',\n          headers: this._headers,\n          body: JSON.stringify({\n            \"password\": `${password}`,\n            \"email\": `${email}` \n          })\n        }\n        )\n        .then(this._checkResponse)\n         \n          .catch((err)=>{\n            console.log(err);\n          })\n      }\n\n      checkTokenUser(token) {\n        return fetch(`${this._baseUrl}/users/me`, {\n          method: 'GET',\n          headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\" : `Bearer ${token}`\n          },\n        }\n        )\n          .then(this._checkResponse);\n      }\n\n\n      _checkResponse(res) {\n        if (res.ok) {\n          return res.json();\n        } else {\n          return Promise.reject(`Ошибка:${res.status} ${res.statusText}`);\n        }\n      }\n\n      \n}\n\n\n\nconst authApi = new AuthApi({\n    baseUrl: 'https://auth.nomoreparties.co',\n    headers: {\n        'Content-Type': 'application/json'\n    }\n  })\n  export {authApi}"],"mappings":"AAAA,eAAe,MAAMA,OAAO,CAAC;EACzBC,WAAW,OAAqB;IAAA,IAApB;MAACC,OAAO;MAAEC;IAAO,CAAC;IAC5B,IAAI,CAACC,QAAQ,GAAGF,OAAO;IACvB,IAAI,CAACG,QAAQ,GAAGF,OAAO;EACzB;EACAG,QAAQ,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACtB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACL,QAAS,SAAQ,EAAE;MACtCM,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,UAAU,EAAG,GAAEL,QAAS,EAAC;QACzB,OAAO,EAAG,GAAED,KAAM;MACpB,CAAC;IACH,CAAC,CACA,CACAO,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC5B;EAEAC,YAAY,CAACT,KAAK,EAAEC,QAAQ,EAAE;IAC5B,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACL,QAAS,SAAQ,EAAE;MACtCM,MAAM,EAAE,MAAM;MACdP,OAAO,EAAE,IAAI,CAACE,QAAQ;MACtBM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB,UAAU,EAAG,GAAEL,QAAS,EAAC;QACzB,OAAO,EAAG,GAAED,KAAM;MACpB,CAAC;IACH,CAAC,CACA,CACAO,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC,CAEvBE,KAAK,CAAEC,GAAG,IAAG;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB,CAAC,CAAC;EACN;EAEAG,cAAc,CAACC,KAAK,EAAE;IACpB,OAAOb,KAAK,CAAE,GAAE,IAAI,CAACL,QAAS,WAAU,EAAE;MACxCM,MAAM,EAAE,KAAK;MACbP,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAI,UAASmB,KAAM;MACpC;IACF,CAAC,CACA,CACER,IAAI,CAAC,IAAI,CAACC,cAAc,CAAC;EAC9B;EAGAA,cAAc,CAACQ,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,EAAE;IACnB,CAAC,MAAM;MACL,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,IAAGL,GAAG,CAACM,UAAW,EAAC,CAAC;IACjE;EACF;AAGN;AAIA,MAAMC,OAAO,GAAG,IAAI9B,OAAO,CAAC;EACxBE,OAAO,EAAE,+BAA+B;EACxCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACF,CAAC,CAAC;AACF,SAAQ2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}