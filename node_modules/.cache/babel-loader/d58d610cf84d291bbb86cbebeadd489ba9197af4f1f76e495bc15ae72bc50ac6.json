{"ast":null,"code":"var _jsxFileName = \"/Users/li4nost/dev/mesto-react/src/components/landing/main.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { api } from \"../../utils/Api\";\nimport Card from \"./card\";\nimport { userContext } from '../../contexts/CurrentUserContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main(props) {\n  _s();\n  const apiUserContext = React.useContext(userContext);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    Promise.all([api.getUserData(), api.getInitialCards()]).then(_ref => {\n      let [userData, cards] = _ref;\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  // лайки на карточку \n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    setCards(state => {\n      console.log(state);\n      return state;\n    });\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.setLikeCard(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__avatar-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: props.changeAvatar,\n          className: \"profile__avatar-edit-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          src: apiUserContext.avatar,\n          alt: \"\\u041A\\u0443\\u0441\\u0442\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"profile__info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__name\",\n            children: apiUserContext.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: props.onEditProfile,\n            className: \"profile__edit-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__subtitle\",\n          children: apiUserContext.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.addNewCard,\n        className: \"profile__add-button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n        onCardLike: props.onCardLike,\n        card: card,\n        likes: card.likes.length,\n        click: props.onCardClick\n      }, card._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"fOpb6chHRAIClZ/4e1O9YpOgIak=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useContext","useEffect","useState","api","Card","userContext","Main","props","apiUserContext","cards","setCards","Promise","all","getUserData","getInitialCards","then","userData","catch","err","console","log","handleCardLike","card","isLiked","likes","some","i","_id","currentUser","state","setLikeCard","newCard","map","c","changeAvatar","avatar","name","onEditProfile","about","addNewCard","onCardLike","length","onCardClick"],"sources":["/Users/li4nost/dev/mesto-react/src/components/landing/main.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { api } from \"../../utils/Api\";\nimport Card from \"./card\";\nimport { userContext} from '../../contexts/CurrentUserContext.js'\nfunction Main(props) {\n\n    const apiUserContext = React.useContext(userContext)\n    \n    const [cards, setCards] = useState([])\n\n    useEffect(() => {\n        Promise.all([api.getUserData(), api.getInitialCards()])\n            .then(([userData, cards]) => {\n                setCards(cards)\n            })\n            .catch(err => {\n                console.log(err);\n            });\n\n    }, [])\n\n    // лайки на карточку \n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        setCards ((state)=> {\n            console.log(state);\n            return state;\n        });\n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.setLikeCard(card._id, !isLiked).then((newCard) => {\n            setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        });\n    }\n\n    return (\n        <div className=\"main\">\n            <section className=\"profile\">\n                <div className=\"profile__avatar-block\">\n                    <button type=\"button\" onClick={props.changeAvatar} className=\"profile__avatar-edit-button\" />\n                    <img className=\"profile__avatar\" src={apiUserContext.avatar} alt=\"Кусто\" />\n                </div>\n                <article className=\"profile__info\">\n                    <div className=\"profile__heading\">\n                        <h1 className=\"profile__name\">{apiUserContext.name}</h1>\n                        <button type=\"button\" onClick={props.onEditProfile} className=\"profile__edit-button\" />\n                    </div>\n                    <p className=\"profile__subtitle\">{apiUserContext.about}</p>\n                </article>\n                <button type=\"button\" onClick={props.addNewCard} className=\"profile__add-button\" />\n            </section>\n            <section className=\"elements\">\n                {cards.map((card) =>\n                    <Card\n                        onCardLike = {props.onCardLike}\n                        key={card._id}\n                        card={card}\n                        likes={card.likes.length}\n                        click={props.onCardClick}\n                    />\n                )}\n            </section>\n        </div>\n    )\n}\nexport default Main\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}